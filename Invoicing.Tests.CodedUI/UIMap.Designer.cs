// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Invoicing.Tests.CodedUI
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertAddedItem - Use 'AssertAddedItemExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAddedItem()
        {
            #region Variable Declarations
            HtmlCell uIMountableHalogenFlooCell = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIProdTableTable.UIMountableHalogenFlooCell;
            #endregion

            // Verify that the 'InnerText' property of 'Mountable Halogen Floodlights' cell equals 'Mountable Halogen Floodlights'
            Assert.AreEqual(this.AssertAddedItemExpectedValues.UIMountableHalogenFlooCellInnerText, uIMountableHalogenFlooCell.InnerText, "AssertAddedItem");
        }
        
        /// <summary>
        /// ClickAddToOrder
        /// </summary>
        public void ClickAddToOrder()
        {
            #region Variable Declarations
            HtmlButton uIAddToOrderButton = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIAddToOrderButton;
            #endregion

            // Click 'Add To Order' button
            Mouse.Click(uIAddToOrderButton, new Point(65, 15));
        }
        
        /// <summary>
        /// CloseBrowser
        /// </summary>
        public void CloseBrowser()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIIndexWindowsInternetWindow.UIIndexWindowsInternetTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(19, 14));
        }
        
        /// <summary>
        /// LaunchSite - Use 'LaunchSiteParams' to pass parameters into this method.
        /// </summary>
        public void LaunchSite()
        {

            // Go to web page 'http://localhost:1716/' using new browser instance
            this.UIGoogleWindowsInterneWindow.LaunchUrl(new System.Uri(this.LaunchSiteParams.UIGoogleWindowsInterneWindowUrl));
        }
        
        /// <summary>
        /// SearchForPart - Use 'SearchForPartParams' to pass parameters into this method.
        /// </summary>
        public void SearchForPart()
        {
            #region Variable Declarations
            HtmlEdit uIPartSearchEdit = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIPartSearchEdit;
            HtmlCustom uIItemCustom = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIItemCustom;
            #endregion

            // Type 'mount' in 'partSearch' text box
            uIPartSearchEdit.Text = this.SearchForPartParams.UIPartSearchEditText;

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(66, 14));
        }
        
        /// <summary>
        /// EnterDiscount - Use 'EnterDiscountParams' to pass parameters into this method.
        /// </summary>
        public void EnterDiscount()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIProdTableTable.UIItemEdit;
            #endregion

            // Type '3' in text box
            uIItemEdit.Text = this.EnterDiscountParams.UIItemEditText;
        }
        
        /// <summary>
        /// EnterQuantity - Use 'EnterQuantityParams' to pass parameters into this method.
        /// </summary>
        public void EnterQuantity()
        {
            #region Variable Declarations
            HtmlEdit uIItemEdit1 = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIProdTableTable.UIItemEdit1;
            #endregion

            // Type '1000' in text box
            uIItemEdit1.Text = this.EnterQuantityParams.UIItemEdit1Text;
        }
        
        /// <summary>
        /// EnterAPR - Use 'EnterAPRParams' to pass parameters into this method.
        /// </summary>
        public void EnterAPR()
        {
            #region Variable Declarations
            HtmlEdit uIAprEdit = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIAprEdit;
            #endregion

            // Type '7.5' in 'apr' text box
            uIAprEdit.Text = this.EnterAPRParams.UIAprEditText;
        }
        
        /// <summary>
        /// EnterCredit - Use 'EnterCreditParams' to pass parameters into this method.
        /// </summary>
        public void EnterCredit()
        {
            #region Variable Declarations
            HtmlEdit uICreditEdit = this.UIIndexWindowsInternetWindow.UIIndexDocument.UICreditEdit;
            #endregion

            // Type '50' in 'credit' text box
            uICreditEdit.Text = this.EnterCreditParams.UICreditEditText;
        }
        
        /// <summary>
        /// EnterGiftCard - Use 'EnterGiftCardParams' to pass parameters into this method.
        /// </summary>
        public void EnterGiftCard()
        {
            #region Variable Declarations
            HtmlEdit uIGiftEdit = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIGiftEdit;
            #endregion

            // Type '25' in 'gift' text box
            uIGiftEdit.Text = this.EnterGiftCardParams.UIGiftEditText;
        }
        
        /// <summary>
        /// EnterTerms - Use 'EnterTermsParams' to pass parameters into this method.
        /// </summary>
        public void EnterTerms()
        {
            #region Variable Declarations
            HtmlEdit uITermsEdit = this.UIIndexWindowsInternetWindow.UIIndexDocument.UITermsEdit;
            #endregion

            // Type '36' in 'terms' text box
            uITermsEdit.Text = this.EnterTermsParams.UITermsEditText;
        }
        
        /// <summary>
        /// ClickCalculate
        /// </summary>
        public void ClickCalculate()
        {
            #region Variable Declarations
            HtmlButton uICalculateButton = this.UIIndexWindowsInternetWindow.UIIndexDocument.UICalculateButton;
            #endregion

            // Click 'Calculate' button
            Mouse.Click(uICalculateButton, new Point(35, 11));
        }
        
        /// <summary>
        /// AssertAmountDue - Use 'AssertAmountDueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAmountDue()
        {
            #region Variable Declarations
            HtmlSpan uIItem962500Pane = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIItem962500Pane;
            #endregion

            // Verify that the 'InnerText' property of '$9,625.00' pane equals '$9,625.00'
            Assert.AreEqual(this.AssertAmountDueExpectedValues.UIItem962500PaneInnerText, uIItem962500Pane.InnerText);
        }
        
        /// <summary>
        /// AssertMonthlyPayment - Use 'AssertMonthlyPaymentExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMonthlyPayment()
        {
            #region Variable Declarations
            HtmlSpan uIItem271558Pane = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIItem271558Pane;
            #endregion

            // Verify that the 'InnerText' property of '$2,715.58' pane equals '$2,715.58'
            Assert.AreEqual(this.AssertMonthlyPaymentExpectedValues.UIItem271558PaneInnerText, uIItem271558Pane.InnerText, "AssertMonthlyPayment");
        }
        
        /// <summary>
        /// AssertFinalPayment - Use 'AssertFinalPaymentExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertFinalPayment()
        {
            #region Variable Declarations
            HtmlSpan uIItem271532Pane = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIItem271532Pane;
            #endregion

            // Verify that the 'InnerText' property of '$2,715.32' pane equals '$2,715.32'
            Assert.AreEqual(this.AssertFinalPaymentExpectedValues.UIItem271532PaneInnerText, uIItem271532Pane.InnerText);
        }
        
        /// <summary>
        /// AssertGiftCardRemaining - Use 'AssertGiftCardRemainingExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertGiftCardRemaining()
        {
            #region Variable Declarations
            HtmlSpan uIItem000Pane = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIItem000Pane;
            #endregion

            // Verify that the 'InnerText' property of '$0.00' pane equals '$0.00'
            Assert.AreEqual(this.AssertGiftCardRemainingExpectedValues.UIItem000PaneInnerText, uIItem000Pane.InnerText);
        }
        
        /// <summary>
        /// AssertCreditRemaining - Use 'AssertCreditRemainingExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertCreditRemaining()
        {
            #region Variable Declarations
            HtmlSpan uIItem000Pane1 = this.UIIndexWindowsInternetWindow.UIIndexDocument.UIItem000Pane1;
            #endregion

            // Verify that the 'InnerText' property of '$0.00' pane equals '$0.00'
            Assert.AreEqual(this.AssertCreditRemainingExpectedValues.UIItem000Pane1InnerText, uIItem000Pane1.InnerText);
        }
        
        #region Properties
        public virtual AssertAddedItemExpectedValues AssertAddedItemExpectedValues
        {
            get
            {
                if ((this.mAssertAddedItemExpectedValues == null))
                {
                    this.mAssertAddedItemExpectedValues = new AssertAddedItemExpectedValues();
                }
                return this.mAssertAddedItemExpectedValues;
            }
        }
        
        public virtual LaunchSiteParams LaunchSiteParams
        {
            get
            {
                if ((this.mLaunchSiteParams == null))
                {
                    this.mLaunchSiteParams = new LaunchSiteParams();
                }
                return this.mLaunchSiteParams;
            }
        }
        
        public virtual SearchForPartParams SearchForPartParams
        {
            get
            {
                if ((this.mSearchForPartParams == null))
                {
                    this.mSearchForPartParams = new SearchForPartParams();
                }
                return this.mSearchForPartParams;
            }
        }
        
        public virtual EnterDiscountParams EnterDiscountParams
        {
            get
            {
                if ((this.mEnterDiscountParams == null))
                {
                    this.mEnterDiscountParams = new EnterDiscountParams();
                }
                return this.mEnterDiscountParams;
            }
        }
        
        public virtual EnterQuantityParams EnterQuantityParams
        {
            get
            {
                if ((this.mEnterQuantityParams == null))
                {
                    this.mEnterQuantityParams = new EnterQuantityParams();
                }
                return this.mEnterQuantityParams;
            }
        }
        
        public virtual EnterAPRParams EnterAPRParams
        {
            get
            {
                if ((this.mEnterAPRParams == null))
                {
                    this.mEnterAPRParams = new EnterAPRParams();
                }
                return this.mEnterAPRParams;
            }
        }
        
        public virtual EnterCreditParams EnterCreditParams
        {
            get
            {
                if ((this.mEnterCreditParams == null))
                {
                    this.mEnterCreditParams = new EnterCreditParams();
                }
                return this.mEnterCreditParams;
            }
        }
        
        public virtual EnterGiftCardParams EnterGiftCardParams
        {
            get
            {
                if ((this.mEnterGiftCardParams == null))
                {
                    this.mEnterGiftCardParams = new EnterGiftCardParams();
                }
                return this.mEnterGiftCardParams;
            }
        }
        
        public virtual EnterTermsParams EnterTermsParams
        {
            get
            {
                if ((this.mEnterTermsParams == null))
                {
                    this.mEnterTermsParams = new EnterTermsParams();
                }
                return this.mEnterTermsParams;
            }
        }
        
        public virtual AssertAmountDueExpectedValues AssertAmountDueExpectedValues
        {
            get
            {
                if ((this.mAssertAmountDueExpectedValues == null))
                {
                    this.mAssertAmountDueExpectedValues = new AssertAmountDueExpectedValues();
                }
                return this.mAssertAmountDueExpectedValues;
            }
        }
        
        public virtual AssertMonthlyPaymentExpectedValues AssertMonthlyPaymentExpectedValues
        {
            get
            {
                if ((this.mAssertMonthlyPaymentExpectedValues == null))
                {
                    this.mAssertMonthlyPaymentExpectedValues = new AssertMonthlyPaymentExpectedValues();
                }
                return this.mAssertMonthlyPaymentExpectedValues;
            }
        }
        
        public virtual AssertFinalPaymentExpectedValues AssertFinalPaymentExpectedValues
        {
            get
            {
                if ((this.mAssertFinalPaymentExpectedValues == null))
                {
                    this.mAssertFinalPaymentExpectedValues = new AssertFinalPaymentExpectedValues();
                }
                return this.mAssertFinalPaymentExpectedValues;
            }
        }
        
        public virtual AssertGiftCardRemainingExpectedValues AssertGiftCardRemainingExpectedValues
        {
            get
            {
                if ((this.mAssertGiftCardRemainingExpectedValues == null))
                {
                    this.mAssertGiftCardRemainingExpectedValues = new AssertGiftCardRemainingExpectedValues();
                }
                return this.mAssertGiftCardRemainingExpectedValues;
            }
        }
        
        public virtual AssertCreditRemainingExpectedValues AssertCreditRemainingExpectedValues
        {
            get
            {
                if ((this.mAssertCreditRemainingExpectedValues == null))
                {
                    this.mAssertCreditRemainingExpectedValues = new AssertCreditRemainingExpectedValues();
                }
                return this.mAssertCreditRemainingExpectedValues;
            }
        }
        
        public UIGoogleWindowsInterneWindow UIGoogleWindowsInterneWindow
        {
            get
            {
                if ((this.mUIGoogleWindowsInterneWindow == null))
                {
                    this.mUIGoogleWindowsInterneWindow = new UIGoogleWindowsInterneWindow();
                }
                return this.mUIGoogleWindowsInterneWindow;
            }
        }
        
        public UIIndexWindowsInternetWindow UIIndexWindowsInternetWindow
        {
            get
            {
                if ((this.mUIIndexWindowsInternetWindow == null))
                {
                    this.mUIIndexWindowsInternetWindow = new UIIndexWindowsInternetWindow();
                }
                return this.mUIIndexWindowsInternetWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertAddedItemExpectedValues mAssertAddedItemExpectedValues;
        
        private LaunchSiteParams mLaunchSiteParams;
        
        private SearchForPartParams mSearchForPartParams;
        
        private EnterDiscountParams mEnterDiscountParams;
        
        private EnterQuantityParams mEnterQuantityParams;
        
        private EnterAPRParams mEnterAPRParams;
        
        private EnterCreditParams mEnterCreditParams;
        
        private EnterGiftCardParams mEnterGiftCardParams;
        
        private EnterTermsParams mEnterTermsParams;
        
        private AssertAmountDueExpectedValues mAssertAmountDueExpectedValues;
        
        private AssertMonthlyPaymentExpectedValues mAssertMonthlyPaymentExpectedValues;
        
        private AssertFinalPaymentExpectedValues mAssertFinalPaymentExpectedValues;
        
        private AssertGiftCardRemainingExpectedValues mAssertGiftCardRemainingExpectedValues;
        
        private AssertCreditRemainingExpectedValues mAssertCreditRemainingExpectedValues;
        
        private UIGoogleWindowsInterneWindow mUIGoogleWindowsInterneWindow;
        
        private UIIndexWindowsInternetWindow mUIIndexWindowsInternetWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAddedItem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertAddedItemExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Mountable Halogen Floodlights' cell equals 'Mountable Halogen Floodlights'
        /// </summary>
        public string UIMountableHalogenFlooCellInnerText = "Mountable Halogen Floodlights";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LaunchSite'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class LaunchSiteParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:1716/' using new browser instance
        /// </summary>
        public string UIGoogleWindowsInterneWindowUrl = "http://localhost:1716/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SearchForPart'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class SearchForPartParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'mount' in 'partSearch' text box
        /// </summary>
        public string UIPartSearchEditText = "mount";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterDiscount'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterDiscountParams
    {
        
        #region Fields
        /// <summary>
        /// Type '3' in text box
        /// </summary>
        public string UIItemEditText = "3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterQuantity'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterQuantityParams
    {
        
        #region Fields
        /// <summary>
        /// Type '1000' in text box
        /// </summary>
        public string UIItemEdit1Text = "1000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterAPR'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterAPRParams
    {
        
        #region Fields
        /// <summary>
        /// Type '7.5' in 'apr' text box
        /// </summary>
        public string UIAprEditText = "7.5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterCredit'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterCreditParams
    {
        
        #region Fields
        /// <summary>
        /// Type '50' in 'credit' text box
        /// </summary>
        public string UICreditEditText = "50";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterGiftCard'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterGiftCardParams
    {
        
        #region Fields
        /// <summary>
        /// Type '25' in 'gift' text box
        /// </summary>
        public string UIGiftEditText = "25";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterTerms'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class EnterTermsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '36' in 'terms' text box
        /// </summary>
        public string UITermsEditText = "36";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAmountDue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertAmountDueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '$9,625.00' pane equals '$9,625.00'
        /// </summary>
        public string UIItem962500PaneInnerText = "$9,625.00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMonthlyPayment'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMonthlyPaymentExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '$2,715.58' pane equals '$2,715.58'
        /// </summary>
        public string UIItem271558PaneInnerText = "$2,715.58";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertFinalPayment'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertFinalPaymentExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '$2,715.32' pane equals '$2,715.32'
        /// </summary>
        public string UIItem271532PaneInnerText = "$2,715.32";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertGiftCardRemaining'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertGiftCardRemainingExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '$0.00' pane equals '$0.00'
        /// </summary>
        public string UIItem000PaneInnerText = "$0.00";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCreditRemaining'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertCreditRemainingExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of '$0.00' pane equals '$0.00'
        /// </summary>
        public string UIItem000Pane1InnerText = "$0.00";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIGoogleWindowsInterneWindow : BrowserWindow
    {
        
        public UIGoogleWindowsInterneWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("Blank Page");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIIndexWindowsInternetWindow : BrowserWindow
    {
        
        public UIIndexWindowsInternetWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Index";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndexDocument UIIndexDocument
        {
            get
            {
                if ((this.mUIIndexDocument == null))
                {
                    this.mUIIndexDocument = new UIIndexDocument(this);
                }
                return this.mUIIndexDocument;
            }
        }
        
        public UIIndexWindowsInternetTitleBar UIIndexWindowsInternetTitleBar
        {
            get
            {
                if ((this.mUIIndexWindowsInternetTitleBar == null))
                {
                    this.mUIIndexWindowsInternetTitleBar = new UIIndexWindowsInternetTitleBar(this);
                }
                return this.mUIIndexWindowsInternetTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIIndexDocument mUIIndexDocument;
        
        private UIIndexWindowsInternetTitleBar mUIIndexWindowsInternetTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIIndexDocument : HtmlDocument
    {
        
        public UIIndexDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:1716/";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIPartSearchEdit
        {
            get
            {
                if ((this.mUIPartSearchEdit == null))
                {
                    this.mUIPartSearchEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPartSearchEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "partSearch";
                    this.mUIPartSearchEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIPartSearchEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIPartSearchEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIPartSearchEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPartSearchEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "ui-autocomplete-input";
                    this.mUIPartSearchEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "class=\"ui-autocomplete-input\" id=\"partSe";
                    this.mUIPartSearchEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIPartSearchEdit.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIPartSearchEdit;
            }
        }
        
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.FilterProperties["Class"] = "ui-corner-all";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "tabindex=\"-1\" class=\"ui-corner-all\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlButton UIAddToOrderButton
        {
            get
            {
                if ((this.mUIAddToOrderButton == null))
                {
                    this.mUIAddToOrderButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUIAddToOrderButton.SearchProperties[HtmlButton.PropertyNames.Id] = "addRow";
                    this.mUIAddToOrderButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIAddToOrderButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Add To Order";
                    this.mUIAddToOrderButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIAddToOrderButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIAddToOrderButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUIAddToOrderButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=\"addRow\"";
                    this.mUIAddToOrderButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "1";
                    this.mUIAddToOrderButton.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIAddToOrderButton;
            }
        }
        
        public UIProdTableTable UIProdTableTable
        {
            get
            {
                if ((this.mUIProdTableTable == null))
                {
                    this.mUIProdTableTable = new UIProdTableTable(this);
                }
                return this.mUIProdTableTable;
            }
        }
        
        public HtmlEdit UIAprEdit
        {
            get
            {
                if ((this.mUIAprEdit == null))
                {
                    this.mUIAprEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIAprEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "apr";
                    this.mUIAprEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIAprEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIAprEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIAprEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIAprEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIAprEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=\"apr\" size=\"3\"";
                    this.mUIAprEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "6";
                    this.mUIAprEdit.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIAprEdit;
            }
        }
        
        public HtmlEdit UICreditEdit
        {
            get
            {
                if ((this.mUICreditEdit == null))
                {
                    this.mUICreditEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICreditEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "credit";
                    this.mUICreditEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUICreditEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUICreditEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICreditEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICreditEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUICreditEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=\"credit\" size=\"4\"";
                    this.mUICreditEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUICreditEdit.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUICreditEdit;
            }
        }
        
        public HtmlEdit UIGiftEdit
        {
            get
            {
                if ((this.mUIGiftEdit == null))
                {
                    this.mUIGiftEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIGiftEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "gift";
                    this.mUIGiftEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIGiftEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIGiftEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIGiftEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIGiftEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIGiftEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=\"gift\" size=\"4\"";
                    this.mUIGiftEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "5";
                    this.mUIGiftEdit.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIGiftEdit;
            }
        }
        
        public HtmlEdit UITermsEdit
        {
            get
            {
                if ((this.mUITermsEdit == null))
                {
                    this.mUITermsEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITermsEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "terms";
                    this.mUITermsEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUITermsEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITermsEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITermsEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITermsEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITermsEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "id=\"terms\" size=\"4\"";
                    this.mUITermsEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "7";
                    this.mUITermsEdit.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUITermsEdit;
            }
        }
        
        public HtmlButton UICalculateButton
        {
            get
            {
                if ((this.mUICalculateButton == null))
                {
                    this.mUICalculateButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUICalculateButton.SearchProperties[HtmlButton.PropertyNames.Id] = "calcpayments";
                    this.mUICalculateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICalculateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Calculate";
                    this.mUICalculateButton.FilterProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICalculateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICalculateButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUICalculateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "id=\"calcpayments\"";
                    this.mUICalculateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUICalculateButton.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUICalculateButton;
            }
        }
        
        public HtmlSpan UIItem962500Pane
        {
            get
            {
                if ((this.mUIItem962500Pane == null))
                {
                    this.mUIItem962500Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem962500Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = "payamt";
                    this.mUIItem962500Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem962500Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "$9,625.00";
                    this.mUIItem962500Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem962500Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "paynum";
                    this.mUIItem962500Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"paynum\" id=\"payamt\"";
                    this.mUIItem962500Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIItem962500Pane.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIItem962500Pane;
            }
        }
        
        public HtmlSpan UIItem271558Pane
        {
            get
            {
                if ((this.mUIItem271558Pane == null))
                {
                    this.mUIItem271558Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem271558Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = "paymonth";
                    this.mUIItem271558Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem271558Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "$2,715.58";
                    this.mUIItem271558Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem271558Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "paynum";
                    this.mUIItem271558Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"paynum\" id=\"paymonth\"";
                    this.mUIItem271558Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "2";
                    this.mUIItem271558Pane.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIItem271558Pane;
            }
        }
        
        public HtmlSpan UIItem271532Pane
        {
            get
            {
                if ((this.mUIItem271532Pane == null))
                {
                    this.mUIItem271532Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem271532Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = "payfinal";
                    this.mUIItem271532Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem271532Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "$2,715.32";
                    this.mUIItem271532Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem271532Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "paynum";
                    this.mUIItem271532Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"paynum\" id=\"payfinal\"";
                    this.mUIItem271532Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "3";
                    this.mUIItem271532Pane.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIItem271532Pane;
            }
        }
        
        public HtmlSpan UIItem000Pane
        {
            get
            {
                if ((this.mUIItem000Pane == null))
                {
                    this.mUIItem000Pane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem000Pane.SearchProperties[HtmlDiv.PropertyNames.Id] = "paygift";
                    this.mUIItem000Pane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem000Pane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "$0.00";
                    this.mUIItem000Pane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem000Pane.FilterProperties[HtmlDiv.PropertyNames.Class] = "paynum";
                    this.mUIItem000Pane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"paynum\" id=\"paygift\"";
                    this.mUIItem000Pane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
                    this.mUIItem000Pane.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIItem000Pane;
            }
        }
        
        public HtmlSpan UIItem000Pane1
        {
            get
            {
                if ((this.mUIItem000Pane1 == null))
                {
                    this.mUIItem000Pane1 = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIItem000Pane1.SearchProperties[HtmlDiv.PropertyNames.Id] = "paycredit";
                    this.mUIItem000Pane1.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItem000Pane1.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "$0.00";
                    this.mUIItem000Pane1.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItem000Pane1.FilterProperties[HtmlDiv.PropertyNames.Class] = "paynum";
                    this.mUIItem000Pane1.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"paynum\" id=\"paycredit\"";
                    this.mUIItem000Pane1.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIItem000Pane1.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIItem000Pane1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIPartSearchEdit;
        
        private HtmlCustom mUIItemCustom;
        
        private HtmlButton mUIAddToOrderButton;
        
        private UIProdTableTable mUIProdTableTable;
        
        private HtmlEdit mUIAprEdit;
        
        private HtmlEdit mUICreditEdit;
        
        private HtmlEdit mUIGiftEdit;
        
        private HtmlEdit mUITermsEdit;
        
        private HtmlButton mUICalculateButton;
        
        private HtmlSpan mUIItem962500Pane;
        
        private HtmlSpan mUIItem271558Pane;
        
        private HtmlSpan mUIItem271532Pane;
        
        private HtmlSpan mUIItem000Pane;
        
        private HtmlSpan mUIItem000Pane1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIProdTableTable : HtmlTable
    {
        
        public UIProdTableTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = "prodTable";
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "\r\nProduct\r\n\r\nPrice\r\n\r\n% Down\r\n\r\nDiscount";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "id=\"prodTable\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "2";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = null;
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIMountableHalogenFlooCell
        {
            get
            {
                if ((this.mUIMountableHalogenFlooCell == null))
                {
                    this.mUIMountableHalogenFlooCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIMountableHalogenFlooCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIMountableHalogenFlooCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIMountableHalogenFlooCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIMountableHalogenFlooCell.FilterProperties[HtmlCell.PropertyNames.InnerText] = "Mountable Halogen Floodlights";
                    this.mUIMountableHalogenFlooCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIMountableHalogenFlooCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "1";
                    this.mUIMountableHalogenFlooCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIMountableHalogenFlooCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIMountableHalogenFlooCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "1";
                    this.mUIMountableHalogenFlooCell.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIMountableHalogenFlooCell;
            }
        }
        
        public HtmlEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "size=\"3\" value=\"0\"";
                    this.mUIItemEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "1";
                    this.mUIItemEdit.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public HtmlEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = null;
                    this.mUIItemEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = null;
                    this.mUIItemEdit1.SearchProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIItemEdit1.SearchProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIItemEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIItemEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIItemEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "size=\"3\" value=\"1\"";
                    this.mUIItemEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIItemEdit1.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIMountableHalogenFlooCell;
        
        private HtmlEdit mUIItemEdit;
        
        private HtmlEdit mUIItemEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIIndexWindowsInternetTitleBar : WinTitleBar
    {
        
        public UIIndexWindowsInternetTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
